{
  "version": 3,
  "file": "ngx-img-fallback.umd.min.js",
  "sources": [
    "ng://ngx-img-fallback/out/app/modules/ngx-img-fallback/ngx-img-fallback.directive.ts",
    "ng://ngx-img-fallback/out/app/modules/ngx-img-fallback/ngx-img-fallback.module.ts"
  ],
  "sourcesContent": [
    "/**\n * Created by vadimdez on 28/01/2018.\n */\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[src-fallback]'\n})\nexport class ImgFallbackDirective implements OnDestroy {\n\n  @Input('src-fallback') imgSrc: string;\n  @Output('loaded') loaded = new EventEmitter<boolean>();\n  private nativeElement: HTMLElement;\n  private isApplied: boolean = false;\n  private ERROR_EVENT_TYPE: string = 'error';\n  private LOAD_EVENT_TYPE: string = 'load';\n  private cancelOnError: Function;\n  private cancelOnLoad: Function;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    this.nativeElement = el.nativeElement;\n\n    this.onError = this.onError.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.addEvents();\n  }\n\n  ngOnDestroy() {\n    this.removeErrorEvent();\n    this.removeOnLoadEvent();\n  }\n\n  private onError() {\n    if (this.nativeElement.getAttribute('src') !== this.imgSrc) {\n      this.isApplied = true;\n      this.renderer.setAttribute(this.nativeElement, 'src', this.imgSrc);\n    } else {\n      this.removeOnLoadEvent();\n    }\n  }\n\n  private onLoad() {\n    this.loaded.emit(this.isApplied);\n  }\n\n  private removeErrorEvent() {\n    if (this.cancelOnError) {\n      this.cancelOnError();\n    }\n  }\n\n  private removeOnLoadEvent() {\n    if (this.cancelOnLoad) {\n      this.cancelOnLoad();\n    }\n  }\n\n  private addEvents() {\n    this.cancelOnError = this.renderer.listen(this.nativeElement, this.ERROR_EVENT_TYPE, this.onError);\n    this.cancelOnLoad = this.renderer.listen(this.nativeElement, this.LOAD_EVENT_TYPE, this.onLoad);\n  }\n}\n",
    "/**\n * Created by vadimdez on 27/11/2016.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ImgFallbackDirective } from './ngx-img-fallback.directive';\n\n@NgModule({\n  declarations: [ImgFallbackDirective],\n  exports: [ImgFallbackDirective]\n})\nexport class ImgFallbackModule { }\n"
  ],
  "names": [
    "ImgFallbackDirective",
    "el",
    "renderer",
    "this",
    "loaded",
    "EventEmitter",
    "isApplied",
    "ERROR_EVENT_TYPE",
    "LOAD_EVENT_TYPE",
    "nativeElement",
    "onError",
    "bind",
    "onLoad",
    "addEvents",
    "prototype",
    "ngOnDestroy",
    "removeErrorEvent",
    "removeOnLoadEvent",
    "getAttribute",
    "imgSrc",
    "setAttribute",
    "emit",
    "cancelOnError",
    "cancelOnLoad",
    "listen",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "Renderer2",
    "Input",
    "Output",
    "ImgFallbackModule",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "2PAGA,IAAAA,EAAA,WAgBE,SAAFA,EAAsBC,EAAwBC,GAAxBC,KAAtBF,GAAsBA,EAAwBE,KAA9CD,SAA8CA,EAR9CC,KAAAC,OAA6B,IAAIC,EAAAA,aAEjCF,KAAAG,WAA+B,EAC/BH,KAAAI,iBAAqC,QACrCJ,KAAAK,gBAAoC,OAKhCL,KAAKM,cAAgBR,EAAGQ,cAExBN,KAAKO,QAAUP,KAAKO,QAAQC,KAAKR,MACjCA,KAAKS,OAAST,KAAKS,OAAOD,KAAKR,MAC/BA,KAAKU,mBAGPb,EAAFc,UAAAC,YAAE,WACEZ,KAAKa,mBACLb,KAAKc,qBAGCjB,EAAVc,UAAAJ,QAAU,WACFP,KAAKM,cAAcS,aAAa,SAAWf,KAAKgB,QAClDhB,KAAKG,WAAY,EACjBH,KAAKD,SAASkB,aAAajB,KAAKM,cAAe,MAAON,KAAKgB,SAE3DhB,KAAKc,qBAIDjB,EAAVc,UAAAF,OAAU,WACNT,KAAKC,OAAOiB,KAAKlB,KAAKG,YAGhBN,EAAVc,UAAAE,iBAAU,WACFb,KAAKmB,eACPnB,KAAKmB,iBAIDtB,EAAVc,UAAAG,kBAAU,WACFd,KAAKoB,cACPpB,KAAKoB,gBAIDvB,EAAVc,UAAAD,UAAU,WACNV,KAAKmB,cAAgBnB,KAAKD,SAASsB,OAAOrB,KAAKM,cAAeN,KAAKI,iBAAkBJ,KAAKO,SAC1FP,KAAKoB,aAAepB,KAAKD,SAASsB,OAAOrB,KAAKM,cAAeN,KAAKK,gBAAiBL,KAAKS,WAxD5F,kBAEAa,KAACC,EAAAA,UAADC,OACEC,SAAU,yDAHZH,KAAoBI,EAAAA,aAApBJ,KAAwEK,EAAAA,+BAOxEX,SAAAM,KAAGM,EAAAA,MAAHJ,MAAS,kBACTvB,SAAAqB,KAAGO,EAAAA,OAAHL,MAAU,aCRV,IAAAM,EAAA,kBAAA,aAAA,kBAIAR,KAACS,EAAAA,SAADP,OACEQ,cAAenC,GACfoC,SAAUpC"
}
